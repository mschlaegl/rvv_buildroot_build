From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id BB16AC433FE
	for <linux-kernel@archiver.kernel.org>; Tue,  9 Nov 2021 09:50:01 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id A24366128B
	for <linux-kernel@archiver.kernel.org>; Tue,  9 Nov 2021 09:50:01 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S245058AbhKIJwq (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Tue, 9 Nov 2021 04:52:46 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:49278 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S244273AbhKIJvg (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 9 Nov 2021 04:51:36 -0500
Received: from mail-pl1-x62b.google.com (mail-pl1-x62b.google.com [IPv6:2607:f8b0:4864:20::62b])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 062B6C061764
        for <linux-kernel@vger.kernel.org>; Tue,  9 Nov 2021 01:48:45 -0800 (PST)
Received: by mail-pl1-x62b.google.com with SMTP id u17so19903811plg.9
        for <linux-kernel@vger.kernel.org>; Tue, 09 Nov 2021 01:48:45 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=sifive.com; s=google;
        h=from:to:subject:date:message-id:in-reply-to:references:mime-version
         :content-transfer-encoding;
        bh=EVVuscMQp2lGVvzsl9H0FHRWDyTQs0McQHy078vwuOw=;
        b=cKAlg7aAY9F/waxsGRhspbhybLa4eWeyPdzqCUQHBxYSasLzV7nLJZCPY6umhcn1aG
         eZnGgWjISVnVUYv3S4glBB7JqmQwgIxH1B6hhY4qgy00ce0cFNjtAEMxqqOSRpt2YOXi
         2K1xkyAfnqB8tYfwhCUN+VLIKxPtvqatiaoXMPUP3B9kHW9dWCdCTBMktaKGE+9BwQ0V
         xYO1NY6Kxh1npu44TLGUhS390GMh2bnqrWOt3L+/9gc6NuJv+arNcMSrHRuVQq+e8ToG
         qVcP+DnNWcs19/FA/9/Wyoo/SgxyYeUQ02NjdNja5WSvpGLst1sVDM0hL033gm8uTisa
         zf1g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=EVVuscMQp2lGVvzsl9H0FHRWDyTQs0McQHy078vwuOw=;
        b=V19aJfaXZLQcbzp+hz+lf1S26j6HLwfnCh1MWw+7itWl6RHT5zNP+g7Q/P3Iy5JChq
         ba4Jz9lZjdbzSNg/tNMtKWOyO0noBtm2woRh3adkpbB0TVNDzjknXl/S+1AcsSTexovc
         nFuvfHFB+z/LgtunBhCcveYogdVM7tpIPnAWF0iJHTFcHOPa+K9XtnHjgV84vKNSexuW
         Rak6vzvb15Gyh4R+IGKqGgD40xoxHkKrAnYdYYNeoGEiCDhsz9TFd5XchBLDmIDGtEc2
         jBV1tekq0r0rl43eHBa2aFdUol2qGKjnJkeTmS3qukPWtZ3v+cD0xqu5HKVo/HIdTnjD
         1G4Q==
X-Gm-Message-State: AOAM531Tjn6wfK/S+3xwe3AVNoeLZFSZu0sJGaaGvkEH0kRN7JJekqsq
        JhnonJcLTpkQ/okSzFOH4uW2DQ==
X-Google-Smtp-Source: ABdhPJyNsWYWX5NtIoaU64xY9v05FODRqM9JNucFY6hQnnaGUpw+q3cXZivYrJFBQu4T5RAwxjZvNA==
X-Received: by 2002:a17:902:c947:b0:141:e7f6:d688 with SMTP id i7-20020a170902c94700b00141e7f6d688mr5681010pla.56.1636451324561;
        Tue, 09 Nov 2021 01:48:44 -0800 (PST)
Received: from hsinchu16.internal.sifive.com (59-124-168-89.hinet-ip.hinet.net. [59.124.168.89])
        by smtp.gmail.com with ESMTPSA id cv1sm1940511pjb.48.2021.11.09.01.48.43
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Tue, 09 Nov 2021 01:48:44 -0800 (PST)
From:   Greentime Hu <greentime.hu@sifive.com>
To:     palmer@dabbelt.com, paul.walmsley@sifive.com,
        linux-riscv@lists.infradead.org, linux-kernel@vger.kernel.org,
        aou@eecs.berkeley.edu
Subject: [PATCH v9 08/17] riscv: Add vector struct and assembler definitions
Date:   Tue,  9 Nov 2021 17:48:20 +0800
Message-Id: <15d09938180ee45bc5481c4a2d41ad656ca23c82.1636362169.git.greentime.hu@sifive.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <cover.1636362169.git.greentime.hu@sifive.com>
References: <cover.1636362169.git.greentime.hu@sifive.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Add vector state context struct in struct thread and asm-offsets.c
definitions.

The vector registers will be saved in datap pointer of __riscv_v_state. It
will be dynamically allocated in kernel space. It will be put right after
the __riscv_v_state data structure in user space.

Co-developed-by: Vincent Chen <vincent.chen@sifive.com>
Signed-off-by: Vincent Chen <vincent.chen@sifive.com>
Signed-off-by: Greentime Hu <greentime.hu@sifive.com>
---
 arch/riscv/include/asm/processor.h   |  1 +
 arch/riscv/include/uapi/asm/ptrace.h | 11 +++++++++++
 arch/riscv/kernel/asm-offsets.c      |  6 ++++++
 3 files changed, 18 insertions(+)

diff --git a/arch/riscv/include/asm/processor.h b/arch/riscv/include/asm/processor.h
index 46b492c78cbb..a268f1382e52 100644
--- a/arch/riscv/include/asm/processor.h
+++ b/arch/riscv/include/asm/processor.h
@@ -35,6 +35,7 @@ struct thread_struct {
 	unsigned long s[12];	/* s[0]: frame pointer */
 	struct __riscv_d_ext_state fstate;
 	unsigned long bad_cause;
+	struct __riscv_v_state vstate;
 };
 
 /* Whitelist the fstate from the task_struct for hardened usercopy */
diff --git a/arch/riscv/include/uapi/asm/ptrace.h b/arch/riscv/include/uapi/asm/ptrace.h
index 882547f6bd5c..bd3b8a710246 100644
--- a/arch/riscv/include/uapi/asm/ptrace.h
+++ b/arch/riscv/include/uapi/asm/ptrace.h
@@ -77,6 +77,17 @@ union __riscv_fp_state {
 	struct __riscv_q_ext_state q;
 };
 
+struct __riscv_v_state {
+	unsigned long vstart;
+	unsigned long vl;
+	unsigned long vtype;
+	unsigned long vcsr;
+	void *datap;
+#if __riscv_xlen == 32
+	__u32 __padding;
+#endif
+};
+
 #endif /* __ASSEMBLY__ */
 
 #endif /* _UAPI_ASM_RISCV_PTRACE_H */
diff --git a/arch/riscv/kernel/asm-offsets.c b/arch/riscv/kernel/asm-offsets.c
index 90f8ce64fa6f..34f43c84723a 100644
--- a/arch/riscv/kernel/asm-offsets.c
+++ b/arch/riscv/kernel/asm-offsets.c
@@ -72,6 +72,12 @@ void asm_offsets(void)
 	OFFSET(TSK_STACK_CANARY, task_struct, stack_canary);
 #endif
 
+	OFFSET(RISCV_V_STATE_VSTART, __riscv_v_state, vstart);
+	OFFSET(RISCV_V_STATE_VL, __riscv_v_state, vl);
+	OFFSET(RISCV_V_STATE_VTYPE, __riscv_v_state, vtype);
+	OFFSET(RISCV_V_STATE_VCSR, __riscv_v_state, vcsr);
+	OFFSET(RISCV_V_STATE_DATAP, __riscv_v_state, datap);
+
 	DEFINE(PT_SIZE, sizeof(struct pt_regs));
 	OFFSET(PT_EPC, pt_regs, epc);
 	OFFSET(PT_RA, pt_regs, ra);
-- 
2.31.1


